{"version":3,"sources":["scripts/main.js"],"names":["mainTable","document","querySelector","theadClickArea","bodyTable","userSort","table","addEventListener","e","mainTH","target","closest","indexCol","cellIndex","allRows","children","sort","firstRow","secondRow","argFirst","cells","innerText","argSecond","match","join","map","row","append"],"mappings":";AAAA,aAkCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAiBH,EAAUE,cAAc,SACzCE,EAAYJ,EAAUE,cAAc,SAE1C,SAASG,EAASC,GAChBH,EAAeI,iBAAiB,QAAS,SAACC,GAClCC,IAAAA,EAASD,EAAEE,OAAOC,QAAQ,MAC1BC,EAAWH,EAAOI,UAClBC,EAAcV,EAAAA,EAAUW,UAEzBN,IAILK,EAAQE,KAAK,SAACC,EAAUC,GAClBC,IAAAA,EAAWF,EAASG,MAAMR,GAAUS,UACpCC,EAAYJ,EAAUE,MAAMR,GAAUS,UAEtCZ,MAAqB,WAArBA,EAAOY,WACTF,GAAYA,EAASI,MAAM,OAAOC,KAAK,MACvCF,GAAaA,EAAUC,MAAM,OAAOC,KAAK,KAIlCL,EAAWG,EAAY,GAAK,IAIvCR,EAAQW,IAAI,SAAAC,GAAOtB,OAAAA,EAAUuB,OAAOD,QAIxCrB,EAASL","file":"main.80ce9e7e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst mainTable = document.querySelector('table');\nconst theadClickArea = mainTable.querySelector('thead');\nconst bodyTable = mainTable.querySelector('tbody');\n\nfunction userSort(table) {\n  theadClickArea.addEventListener('click', (e) => {\n    const mainTH = e.target.closest('th');\n    const indexCol = mainTH.cellIndex;\n    const allRows = [...bodyTable.children];\n\n    if (!mainTH) {\n      return;\n    }\n\n    allRows.sort((firstRow, secondRow) => {\n      let argFirst = firstRow.cells[indexCol].innerText;\n      let argSecond = secondRow.cells[indexCol].innerText;\n\n      if (mainTH.innerText === 'Salary') {\n        argFirst = +argFirst.match(/\\d/g).join('');\n        argSecond = +argSecond.match(/\\d/g).join('');\n\n        return argFirst - argSecond;\n      } else {\n        return argFirst > argSecond ? 1 : -1;\n      }\n    });\n\n    allRows.map(row => bodyTable.append(row));\n  });\n}\n\nuserSort(mainTable);\n"]}